{"version":3,"file":"static/js/169.5e97758b.chunk.js","mappings":"6PACA,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAuG,8BAAvG,EAAiJ,6BAAjJ,EAAsL,yBAAtL,EAA0N,4B,UC4E1N,EArEkB,WAChB,IAAAA,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACJH,IACFI,EAAAA,GAAAA,MAAY,2CACZN,GAASO,EAAAA,EAAAA,OAEb,GAAG,CAACL,EAAOF,IAMX,OACEQ,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAeC,SAAUf,GAL3B,SAAAgB,GACfZ,GAASa,EAAAA,EAAAA,IAAWD,IACpBf,GACF,IAEmEiB,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAUI,SAAC,oBAC1BN,EAAAA,EAAAA,MAAA,SAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAcI,SAAC,YAChCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,GAAG,YACHC,YAAY,oBACRvB,EAAS,QAAS,CACpBwB,UAAU,EACVC,KAAM,QACNC,QAAS,6CAGZvB,EAAOwB,QACNP,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAUI,SAAC,0DAKhCN,EAAAA,EAAAA,MAAA,SAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAcI,SAAC,eAChCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,GAAG,eACHC,YAAY,uBACRvB,EAAS,WAAY,CACvBwB,UAAU,EACVC,KAAM,WACNC,QAAS,yCAGZvB,EAAOyB,WACNR,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAUI,SAAC,4IAOhCC,EAAAA,EAAAA,KAAA,UAAQN,UAAWC,EAAcU,KAAK,SAAQN,SAAC,cAKrD,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"LoginPage_loginForm__fRcAC\",\"title\":\"LoginPage_title__RBt-o\",\"loginInput\":\"LoginPage_loginInput__eewYx\",\"loginSpan\":\"LoginPage_loginSpan__AuIKu\",\"error\":\"LoginPage_error__XDQcQ\",\"loginBtn\":\"LoginPage_loginBtn__8kGss\"};","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearAuthError, loginThunk } from 'redux/authSlice';\nimport { toast } from 'react-toastify';\nimport { selectAuthError } from 'redux/authSelectors';\nimport css from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Oops! Something goes wrong...Try again.');\n      dispatch(clearAuthError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data));\n    reset();\n  };\n  return (\n    <form className={css.loginForm} onSubmit={handleSubmit(onSubmit)}>\n      <h2 className={css.title}>Please sign in</h2>\n      <label>\n        <span className={css.loginSpan}>Email:</span>\n        <input\n          className={css.loginInput}\n          id=\"userEmail\"\n          placeholder=\"Enter your email\"\n          {...register('email', {\n            required: true,\n            type: 'email',\n            pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$',\n          })}\n        />\n        {errors.email && (\n          <span className={css.error}>\n            This field is required. Example: myemail@mail.com\n          </span>\n        )}\n      </label>\n      <label>\n        <span className={css.loginSpan}>Password:</span>\n        <input\n          className={css.loginInput}\n          id=\"userPassword\"\n          placeholder=\"Enter your password\"\n          {...register('password', {\n            required: true,\n            type: 'password',\n            pattern: '(?=.*d)(?=.*[a-z])(?=.*[A-Z]).{8,}',\n          })}\n        />\n        {errors.password && (\n          <span className={css.error}>\n            This field is required. Must contain at least one number and one\n            uppercase and lowercase letter, and at least 8 or more characters.\n          </span>\n        )}\n      </label>\n\n      <button className={css.loginBtn} type=\"submit\">\n        Sign In\n      </button>\n    </form>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","error","useSelector","selectAuthError","useEffect","toast","clearAuthError","_jsxs","className","css","onSubmit","data","loginThunk","children","_jsx","_objectSpread","id","placeholder","required","type","pattern","email","password"],"sourceRoot":""}