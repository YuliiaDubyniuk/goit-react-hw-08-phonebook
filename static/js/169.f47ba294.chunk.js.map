{"version":3,"file":"static/js/169.f47ba294.chunk.js","mappings":"iRACA,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAuG,8BAAvG,EAAiJ,6BAAjJ,EAAsL,yBAAtL,EAA0N,4B,UCSpNA,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAAaE,WAAWD,QAC/BE,SAAUH,EAAAA,KAAaI,IAAI,GAAGC,IAAI,IAAIH,aAEvCA,WA0DH,EAxDkB,WAAO,IAADI,EAAAC,EACtBC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYZ,KALtBa,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAC,EAAKN,EAALM,MACaC,EAAMP,EAAnBQ,UAAaD,OAITE,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACJH,IACFI,EAAAA,GAAAA,MAAY,2CACZN,GAASO,EAAAA,EAAAA,OAEb,GAAG,CAACL,EAAOF,IAMX,OACEQ,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAeC,SAAUf,GAL3B,SAAAgB,GACfZ,GAASa,EAAAA,EAAAA,IAAWD,IACpBf,GACF,IAEmEiB,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAUI,SAAC,oBAC1BN,EAAAA,EAAAA,MAAA,SAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAcI,SAAC,YAChCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,KAAM,QACNC,GAAG,YACHC,YAAY,oBACRxB,EAAS,YAEdoB,EAAAA,EAAAA,KAAA,KAAGN,UAAWC,EAAUI,SAAc,QAAdzB,EAAES,EAAOd,aAAK,IAAAK,OAAA,EAAZA,EAAc+B,cAE3CZ,EAAAA,EAAAA,MAAA,SAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAcI,SAAC,eAChCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,KAAM,WACNC,GAAG,eACHC,YAAY,sBACZE,aAAa,OACT1B,EAAS,eAEdoB,EAAAA,EAAAA,KAAA,KAAGN,UAAWC,EAAUI,SAAiB,QAAjBxB,EAAEQ,EAAOZ,gBAAQ,IAAAI,OAAA,EAAfA,EAAiB8B,cAE9CL,EAAAA,EAAAA,KAAA,UAAQN,UAAWC,EAAcO,KAAK,SAAQH,SAAC,cAKrD,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"LoginPage_loginForm__fRcAC\",\"title\":\"LoginPage_title__RBt-o\",\"loginInput\":\"LoginPage_loginInput__eewYx\",\"loginSpan\":\"LoginPage_loginSpan__AuIKu\",\"error\":\"LoginPage_error__XDQcQ\",\"loginBtn\":\"LoginPage_loginBtn__8kGss\"};","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearAuthError, loginThunk } from 'redux/authSlice';\nimport { toast } from 'react-toastify';\nimport { selectAuthError } from 'redux/authSelectors';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport css from './LoginPage.module.css';\n\nconst schema = yup\n  .object({\n    email: yup.string().required().email(),\n    password: yup.string().min(8).max(15).required(),\n  })\n  .required()\n\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Oops! Something goes wrong...Try again.');\n      dispatch(clearAuthError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data));\n    reset();\n  };\n  return (\n    <form className={css.loginForm} onSubmit={handleSubmit(onSubmit)}>\n      <h2 className={css.title}>Please sign in</h2>\n      <label>\n        <span className={css.loginSpan}>Email:</span>\n        <input\n          className={css.loginInput}\n          type= \"email\"\n          id=\"userEmail\"\n          placeholder=\"Enter your email\"\n          {...register('email')}\n        />\n        {<p className={css.error}>{errors.email?.message}</p>}\n      </label>\n      <label>\n        <span className={css.loginSpan}>Password:</span>\n        <input\n          className={css.loginInput}\n          type= \"password\"\n          id=\"userPassword\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {<p className={css.error}>{errors.password?.message}</p>}\n      </label>\n      <button className={css.loginBtn} type=\"submit\">\n        Sign In\n      </button>\n    </form>\n  );\n};\n\nexport default LoginPage;\n"],"names":["schema","yup","email","required","password","min","max","_errors$email","_errors$password","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","error","useSelector","selectAuthError","useEffect","toast","clearAuthError","_jsxs","className","css","onSubmit","data","loginThunk","children","_jsx","_objectSpread","type","id","placeholder","message","autoComplete"],"sourceRoot":""}