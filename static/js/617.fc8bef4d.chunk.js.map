{"version":3,"file":"static/js/617.fc8bef4d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/contactsSelectors.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/SearchField/SearchField.module.css?c18e","components/SearchField/SearchField.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactsPage.module.css?0ad8","pages/ContactPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__NSSYk\",\"deleteBtn\":\"ContactItem_deleteBtn__fTo+a\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlice';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number}) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.listItem}>\n      {`${name}: ${number}`}\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={() =>\n          dispatch(deleteContact(id))\n        }\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = state => state.contacts;\n\nexport const selectAllContacts = createSelector(\n  selectContacts,\n  contacts => contacts.contacts\n);\nexport const selectIsLoading = createSelector(\n  selectContacts,\n  contacts => contacts.isLoading\n);\nexport const selectError = createSelector(\n  selectContacts,\n  contacts => contacts.error\n);\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n    const { filter, contacts: { contacts } } = state;\n    if (!filter) {\n        return contacts;\n    }\n    const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"Contacts_contactsList__g3sDu\",\"contactText\":\"Contacts_contactText__RbcA9\"};","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contactsSelectors';\nimport css from './Contacts.module.css';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {Array.isArray(contacts) && contacts.length > 0 ? (\n        <ul className={css.contactsList}>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      ) : (\n        <p className={css.contactText}>\n          Your Phonebook is empty. <br /> You can start add contacts right now.\n        </p>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"label\":\"ContactForm_label__-cVXI\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactSpan\":\"ContactForm_contactSpan__JF0gh\",\"error\":\"ContactForm_error__C1smZ\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { addContact } from 'redux/contactsSlice';\nimport { selectAllContacts } from 'redux/contactsSelectors';\nimport { toast } from 'react-toastify';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport css from './ContactForm.module.css';\n\nconst schema = yup\n  .object({\n    name: yup.string().required().min(4),\n    number: yup.string().min(8).required(),\n  })\n  .required();\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectAllContacts);\n  const onSubmit = contact => {\n    if (\n      contactList.some(\n        item =>\n          item.name.toLowerCase().trim() ===\n            contact.name.toLowerCase().trim() ||\n          item.number.trim() === contact.number.trim()\n      )\n    ) {\n      toast.warning('This contact has already been added.');\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n      <h2 className={css.title}>Add new contact</h2>\n      <label className={css.label}>\n        <span className={css.contactSpan}>Name:</span>\n        <input\n          placeholder=\"Enter contact name\"\n          className={css.contactInput}\n          {...register('name', { type: 'text' })}\n        />\n        {<p className={css.error}>{errors.name?.message}</p>}\n      </label>\n      <label className={css.label}>\n        <span className={css.contactSpan}>Phone:</span>\n        <input\n          className={css.contactInput}\n          placeholder=\"Enter phone number\"\n          {...register('number', { type: 'tel' })}\n        />\n        {<p className={css.error}>{errors.number?.message}</p>}\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchField_searchForm__mtyVY\",\"searchLabel\":\"SearchField_searchLabel__IwC+i\",\"searchInput\":\"SearchField_searchInput__M8uIF\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilterValue } from 'redux/contactsSelectors';\nimport css from './SearchField.module.css';\n\nexport const SearchField = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <form className={css.searchForm}>\n      <label className={css.searchLabel}>\n        <span>Find contacts by name</span>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={evt => dispatch(setFilter(evt.target.value))}\n        />\n      </label>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsPage\":\"ContactsPage_contactsPage__rNzS6\",\"contactsWrap\":\"ContactsPage_contactsWrap__4XwvO\",\"load\":\"ContactsPage_load__H4hWJ\"};","import { Contacts } from 'components/Contacts/Contacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { SearchField } from 'components/SearchField/SearchField';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contactsSelectors';\nimport { fetchContacts } from 'redux/contactsSlice';\nimport css from './ContactsPage.module.css'\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactsPage}>\n      <ContactForm />\n      <div className={css.contactsWrap}>\n        <SearchField />\n        {isLoading && <p className={css.load}>Loading...</p> }\n        <Contacts />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactItem","_ref","id","name","number","dispatch","useDispatch","_jsxs","className","css","children","concat","_jsx","type","onClick","deleteContact","selectContacts","state","contacts","selectAllContacts","createSelector","selectIsLoading","isLoading","selectFilterValue","error","filter","selectFilteredContacts","contact","toLowerCase","includes","Contacts","useSelector","_Fragment","Array","isArray","length","map","schema","yup","required","min","ContactForm","_errors$name","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","contactList","onSubmit","some","item","trim","toast","addContact","_objectSpread","placeholder","message","SearchField","filterValue","value","onChange","evt","setFilter","target","useEffect","fetchContacts"],"sourceRoot":""}