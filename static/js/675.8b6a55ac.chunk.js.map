{"version":3,"file":"static/js/675.8b6a55ac.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/contactsSelectors.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/SearchField/SearchField.module.css?c18e","components/SearchField/SearchField.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactsPage.module.css?0ad8","pages/ContactPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__NSSYk\",\"deleteBtn\":\"ContactItem_deleteBtn__fTo+a\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlice';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number}) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.listItem}>\n      {`${name}: ${number}`}\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={() =>\n          dispatch(deleteContact(id))\n        }\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = state => state.contacts;\n\nexport const selectAllContacts = createSelector(\n  selectContacts,\n  contacts => contacts.contacts\n);\nexport const selectIsLoading = createSelector(\n  selectContacts,\n  contacts => contacts.isLoading\n);\nexport const selectError = createSelector(\n  selectContacts,\n  contacts => contacts.error\n);\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n    const { filter, contacts: { contacts } } = state;\n    if (!filter) {\n        return contacts;\n    }\n    const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"Contacts_contactsList__g3sDu\",\"contactText\":\"Contacts_contactText__RbcA9\"};","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contactsSelectors';\nimport css from './Contacts.module.css';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {Array.isArray(contacts) && contacts.length > 0 ? (\n        <ul className={css.contactsList}>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      ) : (\n        <p className={css.contactText}>\n          Your Phonebook is empty. <br /> You can start add contacts right now.\n        </p>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"title\":\"Form_title__5gZHF\",\"label\":\"Form_label__8nx+5\",\"contactInput\":\"Form_contactInput__rcmDX\",\"contactSpan\":\"Form_contactSpan__ybbyq\",\"error\":\"Form_error__Roa6G\",\"formBtn\":\"Form_formBtn__u8Ete\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { addContact } from 'redux/contactsSlice';\nimport { selectAllContacts } from 'redux/contactsSelectors';\nimport { toast } from 'react-toastify';\nimport css from './Form.module.css';\n\nexport const Form = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectAllContacts);\n  const onSubmit = contact => {\n    if (\n      contactList.some(\n        item => item.name === contact.name || item.number === contact.number\n      )\n    ) {\n      toast.warning('This contact has already been added.');\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n      <h2 className={css.title}>Add new contact</h2>\n      <label className={css.label}>\n        <span className={css.contactSpan}>Name:</span>\n        <input\n          id=\"contactName\"\n          placeholder=\"Enter contact name\"\n          className={css.contactInput}\n          {...register('name', {\n            required: true,\n            pattern: \"^[A-Za-z\\u0080-\\uFFFF ']+$\",\n            type: 'text',\n          })}\n        />\n        {errors.name && (\n          <span className={css.error}>\n            This field is required. It may contain only letters, apostrophe,\n            dash and spaces.\n          </span>\n        )}\n      </label>\n      <label className={css.label}>\n        <span className={css.contactSpan}>Phone:</span>\n        <input\n          id=\"contactPhone\"\n          className={css.contactInput}\n          placeholder=\"Enter phone number\"\n          {...register('number', {\n            required: true,\n            pattern: '^(+?[0-9.()-s]*)$',\n            type: 'text',\n          })}\n        />\n        {errors.number && (\n          <span className={css.error}>\n            This field is required. It can contain digits, spaces, dashes,\n            parentheses and can starts with +\n          </span>\n        )}\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchField_searchForm__mtyVY\",\"searchLabel\":\"SearchField_searchLabel__IwC+i\",\"searchInput\":\"SearchField_searchInput__M8uIF\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilterValue } from 'redux/contactsSelectors';\nimport css from './SearchField.module.css';\n\nexport const SearchField = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <form className={css.searchForm}>\n      <label className={css.searchLabel}>\n        <span>Find contacts by name</span>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={evt => dispatch(setFilter(evt.target.value))}\n        />\n      </label>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsPage\":\"ContactsPage_contactsPage__rNzS6\",\"contactsWrap\":\"ContactsPage_contactsWrap__4XwvO\",\"load\":\"ContactsPage_load__H4hWJ\"};","import { Contacts } from 'components/Contacts/Contacts';\nimport { Form } from 'components/Form/Form';\nimport { SearchField } from 'components/SearchField/SearchField';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contactsSelectors';\nimport { fetchContacts } from 'redux/contactsSlice';\nimport css from './ContactsPage.module.css'\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactsPage}>\n      <Form />\n      <div className={css.contactsWrap}>\n        <SearchField />\n        {isLoading && <p className={css.load}>Loading...</p> }\n        <Contacts />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactItem","_ref","id","name","number","dispatch","useDispatch","_jsxs","className","css","children","concat","_jsx","type","onClick","deleteContact","selectContacts","state","contacts","selectAllContacts","createSelector","selectIsLoading","isLoading","selectFilterValue","error","filter","selectFilteredContacts","contact","toLowerCase","includes","Contacts","useSelector","_Fragment","Array","isArray","length","map","Form","_useForm","useForm","register","handleSubmit","reset","errors","formState","contactList","onSubmit","some","item","toast","addContact","_objectSpread","placeholder","required","pattern","SearchField","filterValue","value","onChange","evt","setFilter","target","useEffect","fetchContacts"],"sourceRoot":""}